import os
import json
import random
import logging
from datetime import datetime, timezone
from fastapi import FastAPI, HTTPException, Request
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
from typing import Dict, Any

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = FastAPI(title="Gnome Horoscope API", version="1.0.0")

# CORS (—Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Å–µ–º –¥–æ–º–µ–Ω–∞–º)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
class FavoriteRequest(BaseModel):
    initData: str = ""
    type: str
    content: Any

# –ì–æ—Ä–æ—Å–∫–æ–ø—ã
HOROSCOPE_TEMPLATES = [
    "–ó–≤–µ–∑–¥—ã —Å–æ–≤–µ—Ç—É—é—Ç –≤–∞–º –ø—Ä–æ—è–≤–∏—Ç—å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É! –°–µ–≥–æ–¥–Ω—è —É–¥–∞—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π.",
    "–ü—Ä–∏—Å–ª—É—à–∞–π—Ç–µ—Å—å –∫ —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏ - –æ–Ω–∞ –Ω–µ –ø–æ–¥–≤–µ–¥–µ—Ç –≤ –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏—è—Ö.",
    "–î–µ–Ω—å –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–µ–Ω –¥–ª—è –æ–±—â–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.",
    "–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Å–µ–º–µ–π–Ω—ã—Ö –¥–µ–ª–∞—Ö, –±–ª–∏–∑–∫–∏–µ –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ –≤–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ.",
    "–í—Ä–µ–º—è –ø—Ä–æ—è–≤–∏—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏! –ù–µ –±–æ–π—Ç–µ—Å—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å.",
    "–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –¥–µ–ª–∞–º –ø—Ä–∏–Ω–µ—Å–µ—Ç –æ—Ç–ª–∏—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.",
    "–ò—â–∏—Ç–µ –±–∞–ª–∞–Ω—Å –≤–æ –≤—Å–µ–º - —Ä–∞–±–æ—Ç–µ, –æ—Ç–¥—ã—Ö–µ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö.",
    "–ì–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å–∏—Ç—É–∞—Ü–∏–∏ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.",
    "–†–∞—Å—à–∏—Ä—å—Ç–µ –≥–æ—Ä–∏–∑–æ–Ω—Ç—ã! –ù–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –æ—Ç–∫—Ä–æ—é—Ç –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã.",
    "–¢–µ—Ä–ø–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å - –∫–ª—é—á –∫ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Ü–µ–ª–∏.",
    "–í—Ä–µ–º—è –¥–ª—è —Å–º–µ–ª—ã—Ö –∏–¥–µ–π –∏ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π!",
    "–î–æ–≤–µ—Ä—å—Ç–µ—Å—å —Ç–µ—á–µ–Ω–∏—é –∂–∏–∑–Ω–∏, –∏–Ω—Ç—É–∏—Ü–∏—è –ø–æ–¥—Å–∫–∞–∂–µ—Ç –≤–µ—Ä–Ω—ã–π –ø—É—Ç—å."
]

# –ö–∞—Ä—Ç—ã –¥–Ω—è
DAY_CARDS = [
    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–ì–Ω–æ–º-–∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç", "—Å–æ–≤–µ—Ç": "–°–µ–≥–æ–¥–Ω—è –≤—Ä–µ–º—è –¥–ª—è —Å–º–µ–ª—ã—Ö —Ä–µ—à–µ–Ω–∏–π! –ù–µ –±–æ–π—Å—è —Ä–∏—Å–∫–Ω—É—Ç—å - —Ñ–æ—Ä—Ç—É–Ω–∞ –ª—é–±–∏—Ç —Ö—Ä–∞–±—Ä—ã—Ö."},
    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–ì–Ω–æ–º-–ø–æ–≤–∞—Ä", "—Å–æ–≤–µ—Ç": "–î–µ–Ω—å –¥–ª—è –∑–∞–±–æ—Ç—ã –æ —Å–≤–æ–µ–º —Ç–µ–ª–µ –∏ –¥—É—à–µ. –ü—Ä–∏–≥–æ—Ç–æ–≤—å —á—Ç–æ-—Ç–æ –≤–∫—É—Å–Ω–æ–µ –∏–ª–∏ –ø–æ–±–∞–ª—É–π —Å–µ–±—è."},
    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–ì–Ω–æ–º-—Å–∞–¥–æ–≤–Ω–∏–∫", "—Å–æ–≤–µ—Ç": "–í—Ä–µ–º—è –ø–æ—Å–∞–¥–∏—Ç—å —Å–µ–º–µ–Ω–∞ –±—É–¥—É—â–∏—Ö —É—Å–ø–µ—Ö–æ–≤. –ù–µ–±–æ–ª—å—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏–Ω–µ—Å—É—Ç –±–æ–ª—å—à–∏–µ –ø–ª–æ–¥—ã."},
    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–ì–Ω–æ–º-–∏–∑–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—å", "—Å–æ–≤–µ—Ç": "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞—à–∫–∞–ª–∏–≤–∞–µ—Ç —Å–µ–≥–æ–¥–Ω—è! –ü—Ä–∏–¥—É–º–∞–π —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –∏–ª–∏ —Ä–µ—à–∏ –∑–∞–¥–∞—á—É –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º."},
    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–ì–Ω–æ–º-–º—É–∑—ã–∫–∞–Ω—Ç", "—Å–æ–≤–µ—Ç": "–ù–∞–π–¥–∏ —Å–≤–æ–π —Ä–∏—Ç–º –¥–Ω—è. –í–∫–ª—é—á–∏ –ª—é–±–∏–º—É—é –º—É–∑—ã–∫—É –∏ –ø–æ–∑–≤–æ–ª—å –º–µ–ª–æ–¥–∏–∏ –≤–µ—Å—Ç–∏ —Ç–µ–±—è –∫ —É—Å–ø–µ—Ö—É."},
    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–ì–Ω–æ–º-—Ñ–∏–ª–æ—Å–æ—Ñ", "—Å–æ–≤–µ—Ç": "–†–∞–∑–º—ã—à–ª–µ–Ω–∏—è –ø—Ä–∏–Ω–µ—Å—É—Ç —è—Å–Ω–æ—Å—Ç—å. –£–¥–µ–ª–∏—Ç–µ –≤—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑—É —Å–≤–æ–∏—Ö —Ü–µ–ª–µ–π –∏ –∂–µ–ª–∞–Ω–∏–π."},
    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–ì–Ω–æ–º-–ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫", "—Å–æ–≤–µ—Ç": "–ù–æ–≤—ã–µ –º–µ—Å—Ç–∞ –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è –∂–¥—É—Ç! –î–∞–∂–µ –∫–æ—Ä–æ—Ç–∫–∞—è –ø—Ä–æ–≥—É–ª–∫–∞ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ–º."},
    {"–Ω–∞–∑–≤–∞–Ω–∏–µ": "–ì–Ω–æ–º-–º–∞—Å—Ç–µ—Ä", "—Å–æ–≤–µ—Ç": "–†—É–∫–∏ –ø–æ–º–Ω—è—Ç –º—É–¥—Ä–æ—Å—Ç—å. –ó–∞–π–º–∏—Ç–µ—Å—å –ª—é–±–∏–º—ã–º –¥–µ–ª–æ–º –∏–ª–∏ –æ—Å–≤–æ–π—Ç–µ –Ω–æ–≤—ã–π –Ω–∞–≤—ã–∫."}
]

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ - –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
user_favorites = {}

@app.exception_handler(Exception)
async def general_exception_handler(request: Request, exc: Exception):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π"""
    logger.error(f"Unexpected error: {str(exc)}")
    return {"error": "Internal server error", "detail": "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"}

@app.get("/")
async def root():
    """–ö–æ—Ä–Ω–µ–≤–æ–π —Ä–æ—É—Ç"""
    return {
        "message": "üßô‚Äç‚ôÇÔ∏è Gnome Horoscope API is running!",
        "status": "ok",
        "version": "1.0.0",
        "endpoints": [
            "GET /health - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏",
            "GET /api/horoscope?sign=–ó–ù–ê–ö - –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø",
            "POST /api/day-card - –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è",
            "GET /api/favorites - –ø–æ–ª—É—á–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
            "POST /api/favorites - –¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
        ]
    }

@app.get("/health")
async def health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"""
    return {
        "status": "ok", 
        "timestamp": datetime.now(timezone.utc).isoformat(),
        "service": "Gnome Horoscope API"
    }

@app.get("/api/horoscope")
async def get_horoscope(sign: str, date: str = None):
    """–ü–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞"""
    try:
        if date is None:
            date = datetime.now(timezone.utc).strftime("%Y-%m-%d")
        
        logger.info(f"–ó–∞–ø—Ä–æ—Å –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –¥–ª—è {sign} –Ω–∞ {date}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–Ω–∞–∫–∞ –∏ –¥–∞—Ç—ã
        seed = hash(f"{sign}{date}") % len(HOROSCOPE_TEMPLATES)
        horoscope_text = HOROSCOPE_TEMPLATES[seed]
        
        return {
            "sign": sign,
            "date": date,
            "text": horoscope_text,
            "cached": False,
            "source": "Gnome Horoscope API"
        }
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞: {str(e)}")
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞")

@app.post("/api/day-card")
async def get_day_card(request: Dict[str, Any] = None):
    """–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è"""
    try:
        logger.info("–ó–∞–ø—Ä–æ—Å –∫–∞—Ä—Ç—ã –¥–Ω—è")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É
        card = random.choice(DAY_CARDS)
        
        return {
            "title": card["–Ω–∞–∑–≤–∞–Ω–∏–µ"],
            "text": card["—Å–æ–≤–µ—Ç"],
            "reused": False,
            "date": datetime.now(timezone.utc).strftime("%Y-%m-%d"),
            "source": "Gnome Horoscope API"
        }
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã –¥–Ω—è: {str(e)}")
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã –¥–Ω—è")

@app.get("/api/favorites")
async def get_favorites(initData: str = ""):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        logger.info(f"–ó–∞–ø—Ä–æ—Å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º initData –∫–∞–∫ –∫–ª—é—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ - –ø–∞—Ä—Å–∏–Ω–≥ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è)
        user_id = initData or "anonymous"
        favorites = user_favorites.get(user_id, [])
        
        return {
            "favorites": favorites,
            "success": True,
            "message": "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ",
            "count": len(favorites)
        }
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: {str(e)}")
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ")

@app.post("/api/favorites")
async def add_favorite(request: FavoriteRequest):
    """–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"""
    try:
        logger.info(f"–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: —Ç–∏–ø {request.type}")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º initData –∫–∞–∫ –∫–ª—é—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = request.initData or "anonymous"
        
        if user_id not in user_favorites:
            user_favorites[user_id] = []
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        favorite_item = {
            "type": request.type,
            "content": request.content,
            "added_at": datetime.now(timezone.utc).isoformat()
        }
        
        user_favorites[user_id].append(favorite_item)
        
        return {
            "success": True,
            "message": "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
            "total_favorites": len(user_favorites[user_id])
        }
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: {str(e)}")
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")

@app.get("/robots.txt")
async def robots_txt():
    """–§–∞–π–ª robots.txt –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Ä–æ–±–æ—Ç–æ–≤"""
    return "User-agent: *\nDisallow: /"

# –î–ª—è Render deployment
if __name__ == "__main__":
    import uvicorn
    port = int(os.environ.get("PORT", 8000))
    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ Gnome Horoscope API –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    uvicorn.run(app, host="0.0.0.0", port=port)
